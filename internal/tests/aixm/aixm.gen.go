// This file is automatically generated. DO NOT EDIT.

package aixm

import (
	"encoding/xml"
	"time"
)

type AIXMBasicMessage struct {
	XMLName        xml.Name `xml:"AIXMBasicMessage"`
	Aixm           string   `xml:"aixm,attr"`
	Event          string   `xml:"event,attr"`
	Gco            string   `xml:"gco,attr"`
	Gmd            string   `xml:"gmd,attr"`
	Gml            string   `xml:"gml,attr"`
	Gsr            string   `xml:"gsr,attr"`
	Gss            string   `xml:"gss,attr"`
	Gts            string   `xml:"gts,attr"`
	Id             string   `xml:"id,attr"`
	Message        string   `xml:"message,attr"`
	SchemaLocation string   `xml:"schemaLocation,attr"`
	Xlink          string   `xml:"xlink,attr"`
	Xsd            string   `xml:"xsd,attr"`
	Xsi            string   `xml:"xsi,attr"`
	HasMember      []struct {
		AirportHeliport *struct {
			Id         string `xml:"id,attr"`
			Identifier struct {
				CodeSpace string `xml:"codeSpace,attr"`
				CharData  string `xml:",chardata"`
			} `xml:"identifier"`
			TimeSlice struct {
				AirportHeliportTimeSlice struct {
					Id  string `xml:"id,attr"`
					ARP struct {
						ElevatedPoint struct {
							Id              string `xml:"id,attr"`
							SrsName         string `xml:"srsName,attr"`
							GeoidUndulation *struct {
								Uom      string `xml:"uom,attr"`
								CharData string `xml:",chardata"`
							} `xml:"geoidUndulation"`
							Pos              string `xml:"pos"`
							VerticalAccuracy *int   `xml:"verticalAccuracy"`
						} `xml:"ElevatedPoint"`
					} `xml:"ARP"`
					Abandoned  *string `xml:"abandoned"`
					Annotation []*struct {
						Note struct {
							Id             string `xml:"id,attr"`
							PropertyName   string `xml:"propertyName"`
							Purpose        string `xml:"purpose"`
							TranslatedNote struct {
								LinguisticNote struct {
									Id   string `xml:"id,attr"`
									Note struct {
										Lang     string `xml:"lang,attr"`
										CharData string `xml:",chardata"`
									} `xml:"note"`
								} `xml:"LinguisticNote"`
							} `xml:"translatedNote"`
						} `xml:"Note"`
					} `xml:"annotation"`
					CertificationDate struct {
						Nil       bool   `xml:"nil,attr"`
						NilReason string `xml:"nilReason,attr"`
					} `xml:"certificationDate"`
					CertificationExpirationDate struct {
						Nil       bool   `xml:"nil,attr"`
						NilReason string `xml:"nilReason,attr"`
					} `xml:"certificationExpirationDate"`
					CertifiedICAO struct {
						Nil       bool   `xml:"nil,attr"`
						NilReason string `xml:"nilReason,attr"`
					} `xml:"certifiedICAO"`
					ControlType struct {
						Nil       *bool   `xml:"nil,attr"`
						NilReason *string `xml:"nilReason,attr"`
						CharData  string  `xml:",chardata"`
					} `xml:"controlType"`
					CorrectionNumber      bool    `xml:"correctionNumber"`
					DateMagneticVariation *int    `xml:"dateMagneticVariation"`
					Designator            string  `xml:"designator"`
					DesignatorIATA        *string `xml:"designatorIATA"`
					FieldElevation        *struct {
						Uom      string `xml:"uom,attr"`
						CharData string `xml:",chardata"`
					} `xml:"fieldElevation"`
					FieldElevationAccuracy struct {
						Uom      string `xml:"uom,attr"`
						CharData string `xml:",chardata"`
					} `xml:"fieldElevationAccuracy"`
					Interpretation            string   `xml:"interpretation"`
					LocationIndicatorICAO     *string  `xml:"locationIndicatorICAO"`
					MagneticVariation         *float64 `xml:"magneticVariation"`
					MagneticVariationAccuracy struct {
						Nil       bool   `xml:"nil,attr"`
						NilReason string `xml:"nilReason,attr"`
					} `xml:"magneticVariationAccuracy"`
					MagneticVariationChange struct {
						Nil       bool   `xml:"nil,attr"`
						NilReason string `xml:"nilReason,attr"`
						CharData  string `xml:",chardata"`
					} `xml:"magneticVariationChange"`
					Name                 string  `xml:"name"`
					PrivateUse           *string `xml:"privateUse"`
					ReferenceTemperature *struct {
						Uom      string `xml:"uom,attr"`
						CharData string `xml:",chardata"`
					} `xml:"referenceTemperature"`
					ResponsibleOrganisation struct {
						AirportHeliportResponsibilityOrganisation struct {
							Id                       string `xml:"id,attr"`
							TheOrganisationAuthority struct {
								Href string `xml:"href,attr"`
							} `xml:"theOrganisationAuthority"`
						} `xml:"AirportHeliportResponsibilityOrganisation"`
					} `xml:"responsibleOrganisation"`
					SequenceNumber bool `xml:"sequenceNumber"`
					ServedCity     *struct {
						City struct {
							Id   string `xml:"id,attr"`
							Name string `xml:"name"`
						} `xml:"City"`
					} `xml:"servedCity"`
					TransitionAltitude *struct {
						Uom      string `xml:"uom,attr"`
						CharData string `xml:",chardata"`
					} `xml:"transitionAltitude"`
					Type      string `xml:"type"`
					ValidTime struct {
						TimePeriod struct {
							Id            string    `xml:"id,attr"`
							BeginPosition time.Time `xml:"beginPosition"`
							EndPosition   struct {
								IndeterminatePosition string `xml:"indeterminatePosition,attr"`
							} `xml:"endPosition"`
						} `xml:"TimePeriod"`
					} `xml:"validTime"`
				} `xml:"AirportHeliportTimeSlice"`
			} `xml:"timeSlice"`
		} `xml:"AirportHeliport"`
		Airspace *struct {
			Id         string `xml:"id,attr"`
			Identifier struct {
				CodeSpace string `xml:"codeSpace,attr"`
				CharData  string `xml:",chardata"`
			} `xml:"identifier"`
			TimeSlice struct {
				AirspaceTimeSlice struct {
					Id    string `xml:"id,attr"`
					Class struct {
						AirspaceLayerClass struct {
							Id               string `xml:"id,attr"`
							AssociatedLevels struct {
								AirspaceLayer struct {
									Id         string `xml:"id,attr"`
									LowerLimit struct {
										Uom      string `xml:"uom,attr"`
										CharData string `xml:",chardata"`
									} `xml:"lowerLimit"`
									LowerLimitReference string `xml:"lowerLimitReference"`
									UpperLimit          struct {
										Uom      string `xml:"uom,attr"`
										CharData string `xml:",chardata"`
									} `xml:"upperLimit"`
									UpperLimitReference string `xml:"upperLimitReference"`
								} `xml:"AirspaceLayer"`
							} `xml:"associatedLevels"`
							Classification *string `xml:"classification"`
						} `xml:"AirspaceLayerClass"`
					} `xml:"class"`
					CorrectionNumber  bool   `xml:"correctionNumber"`
					Designator        string `xml:"designator"`
					DesignatorICAO    string `xml:"designatorICAO"`
					GeometryComponent struct {
						AirspaceGeometryComponent struct {
							Id                string `xml:"id,attr"`
							TheAirspaceVolume struct {
								AirspaceVolume struct {
									Id                   string `xml:"id,attr"`
									HorizontalProjection struct {
										Surface struct {
											Id      string `xml:"id,attr"`
											SrsName string `xml:"srsName,attr"`
											Patches struct {
												PolygonPatch struct {
													Exterior struct {
														Ring struct {
															CurveMember []struct {
																Href  *string `xml:"href,attr"`
																Title *string `xml:"title,attr"`
																Curve *struct {
																	Id       string `xml:"id,attr"`
																	Segments struct {
																		ArcByCenterPoint []*struct {
																			Interpolation string `xml:"interpolation,attr"`
																			NumArc        bool   `xml:"numArc,attr"`
																			EndAngle      struct {
																				Uom      string `xml:"uom,attr"`
																				CharData string `xml:",chardata"`
																			} `xml:"endAngle"`
																			PosList struct {
																				SrsName  string `xml:"srsName,attr"`
																				CharData string `xml:",chardata"`
																			} `xml:"posList"`
																			Radius struct {
																				Uom      string `xml:"uom,attr"`
																				CharData string `xml:",chardata"`
																			} `xml:"radius"`
																			StartAngle struct {
																				Uom      string `xml:"uom,attr"`
																				CharData string `xml:",chardata"`
																			} `xml:"startAngle"`
																		} `xml:"ArcByCenterPoint"`
																		CircleByCenterPoint *struct {
																			Interpolation string `xml:"interpolation,attr"`
																			NumArc        bool   `xml:"numArc,attr"`
																			PosList       struct {
																				SrsName  string `xml:"srsName,attr"`
																				CharData string `xml:",chardata"`
																			} `xml:"posList"`
																			Radius struct {
																				Uom      string `xml:"uom,attr"`
																				CharData string `xml:",chardata"`
																			} `xml:"radius"`
																		} `xml:"CircleByCenterPoint"`
																		GeodesicString []*struct {
																			Interpolation string `xml:"interpolation,attr"`
																			PosList       struct {
																				SrsName  string `xml:"srsName,attr"`
																				CharData string `xml:",chardata"`
																			} `xml:"posList"`
																		} `xml:"GeodesicString"`
																	} `xml:"segments"`
																} `xml:"Curve"`
															} `xml:"curveMember"`
														} `xml:"Ring"`
													} `xml:"exterior"`
												} `xml:"PolygonPatch"`
											} `xml:"patches"`
										} `xml:"Surface"`
									} `xml:"horizontalProjection"`
									LowerLimit struct {
										Uom      string `xml:"uom,attr"`
										CharData string `xml:",chardata"`
									} `xml:"lowerLimit"`
									LowerLimitReference string `xml:"lowerLimitReference"`
									MaximumLimit        *struct {
										Uom      string `xml:"uom,attr"`
										CharData string `xml:",chardata"`
									} `xml:"maximumLimit"`
									MaximumLimitReference *string `xml:"maximumLimitReference"`
									MinimumLimit          *struct {
										Uom      string `xml:"uom,attr"`
										CharData string `xml:",chardata"`
									} `xml:"minimumLimit"`
									MinimumLimitReference *string `xml:"minimumLimitReference"`
									UpperLimit            struct {
										Uom      string `xml:"uom,attr"`
										CharData string `xml:",chardata"`
									} `xml:"upperLimit"`
									UpperLimitReference string `xml:"upperLimitReference"`
								} `xml:"AirspaceVolume"`
							} `xml:"theAirspaceVolume"`
						} `xml:"AirspaceGeometryComponent"`
					} `xml:"geometryComponent"`
					Interpretation string  `xml:"interpretation"`
					LocalType      *string `xml:"localType"`
					Name           string  `xml:"name"`
					SequenceNumber bool    `xml:"sequenceNumber"`
					Type           string  `xml:"type"`
					ValidTime      struct {
						TimePeriod struct {
							Id            string    `xml:"id,attr"`
							BeginPosition time.Time `xml:"beginPosition"`
							EndPosition   struct {
								IndeterminatePosition string `xml:"indeterminatePosition,attr"`
							} `xml:"endPosition"`
						} `xml:"TimePeriod"`
					} `xml:"validTime"`
				} `xml:"AirspaceTimeSlice"`
			} `xml:"timeSlice"`
		} `xml:"Airspace"`
		DME *struct {
			Id         string `xml:"id,attr"`
			Identifier struct {
				CodeSpace string `xml:"codeSpace,attr"`
				CharData  string `xml:",chardata"`
			} `xml:"identifier"`
			TimeSlice struct {
				DMETimeSlice struct {
					Id        string `xml:"id,attr"`
					Authority struct {
						AuthorityForNavaidEquipment struct {
							Id                       string `xml:"id,attr"`
							TheOrganisationAuthority struct {
								Href string `xml:"href,attr"`
							} `xml:"theOrganisationAuthority"`
						} `xml:"AuthorityForNavaidEquipment"`
					} `xml:"authority"`
					Channel          *string `xml:"channel"`
					CorrectionNumber bool    `xml:"correctionNumber"`
					Designator       string  `xml:"designator"`
					GhostFrequency   *struct {
						Uom      string `xml:"uom,attr"`
						CharData string `xml:",chardata"`
					} `xml:"ghostFrequency"`
					Interpretation string `xml:"interpretation"`
					Location       struct {
						ElevatedPoint struct {
							Id      string `xml:"id,attr"`
							SrsName string `xml:"srsName,attr"`
							Pos     string `xml:"pos"`
						} `xml:"ElevatedPoint"`
					} `xml:"location"`
					Name           *string `xml:"name"`
					SequenceNumber bool    `xml:"sequenceNumber"`
					Type           *string `xml:"type"`
					ValidTime      struct {
						TimePeriod struct {
							Id            string    `xml:"id,attr"`
							BeginPosition time.Time `xml:"beginPosition"`
							EndPosition   struct {
								IndeterminatePosition string `xml:"indeterminatePosition,attr"`
							} `xml:"endPosition"`
						} `xml:"TimePeriod"`
					} `xml:"validTime"`
				} `xml:"DMETimeSlice"`
			} `xml:"timeSlice"`
		} `xml:"DME"`
		DesignatedPoint *struct {
			Id         string `xml:"id,attr"`
			Identifier struct {
				CodeSpace string `xml:"codeSpace,attr"`
				CharData  string `xml:",chardata"`
			} `xml:"identifier"`
			TimeSlice struct {
				DesignatedPointTimeSlice struct {
					Id               string `xml:"id,attr"`
					CorrectionNumber bool   `xml:"correctionNumber"`
					Designator       string `xml:"designator"`
					Interpretation   string `xml:"interpretation"`
					Location         struct {
						Point struct {
							Id      string `xml:"id,attr"`
							SrsName string `xml:"srsName,attr"`
							Pos     string `xml:"pos"`
						} `xml:"Point"`
					} `xml:"location"`
					Name           *string `xml:"name"`
					SequenceNumber bool    `xml:"sequenceNumber"`
					Type           string  `xml:"type"`
					ValidTime      struct {
						TimePeriod struct {
							Id            string    `xml:"id,attr"`
							BeginPosition time.Time `xml:"beginPosition"`
							EndPosition   struct {
								IndeterminatePosition string `xml:"indeterminatePosition,attr"`
							} `xml:"endPosition"`
						} `xml:"TimePeriod"`
					} `xml:"validTime"`
				} `xml:"DesignatedPointTimeSlice"`
			} `xml:"timeSlice"`
		} `xml:"DesignatedPoint"`
		GeoBorder struct {
			Id         string `xml:"id,attr"`
			Identifier struct {
				CodeSpace string `xml:"codeSpace,attr"`
				CharData  string `xml:",chardata"`
			} `xml:"identifier"`
			TimeSlice struct {
				GeoBorderTimeSlice struct {
					Id     string `xml:"id,attr"`
					Border struct {
						Curve struct {
							Id       string `xml:"id,attr"`
							SrsName  string `xml:"srsName,attr"`
							Segments struct {
								GeodesicString struct {
									PosList string `xml:"posList"`
								} `xml:"GeodesicString"`
							} `xml:"segments"`
						} `xml:"Curve"`
					} `xml:"border"`
					CorrectionNumber bool   `xml:"correctionNumber"`
					Interpretation   string `xml:"interpretation"`
					Name             string `xml:"name"`
					SequenceNumber   bool   `xml:"sequenceNumber"`
					Type             string `xml:"type"`
					ValidTime        struct {
						TimePeriod struct {
							Id            string    `xml:"id,attr"`
							BeginPosition time.Time `xml:"beginPosition"`
							EndPosition   struct {
								IndeterminatePosition string `xml:"indeterminatePosition,attr"`
							} `xml:"endPosition"`
						} `xml:"TimePeriod"`
					} `xml:"validTime"`
				} `xml:"GeoBorderTimeSlice"`
			} `xml:"timeSlice"`
		} `xml:"GeoBorder"`
		NDB *struct {
			Id         string `xml:"id,attr"`
			Identifier struct {
				CodeSpace string `xml:"codeSpace,attr"`
				CharData  string `xml:",chardata"`
			} `xml:"identifier"`
			TimeSlice struct {
				NDBTimeSlice struct {
					Id        string `xml:"id,attr"`
					Authority struct {
						AuthorityForNavaidEquipment struct {
							Id                       string `xml:"id,attr"`
							TheOrganisationAuthority struct {
								Href string `xml:"href,attr"`
							} `xml:"theOrganisationAuthority"`
						} `xml:"AuthorityForNavaidEquipment"`
					} `xml:"authority"`
					Class            string `xml:"class"`
					CorrectionNumber bool   `xml:"correctionNumber"`
					Designator       string `xml:"designator"`
					Frequency        struct {
						Nil       bool    `xml:"nil,attr"`
						NilReason *string `xml:"nilReason,attr"`
						Uom       string  `xml:"uom,attr"`
						CharData  string  `xml:",chardata"`
					} `xml:"frequency"`
					Interpretation string `xml:"interpretation"`
					Location       struct {
						ElevatedPoint struct {
							Id      string `xml:"id,attr"`
							SrsName string `xml:"srsName,attr"`
							Pos     string `xml:"pos"`
						} `xml:"ElevatedPoint"`
					} `xml:"location"`
					Name           *string `xml:"name"`
					SequenceNumber bool    `xml:"sequenceNumber"`
					ValidTime      struct {
						TimePeriod struct {
							Id            string    `xml:"id,attr"`
							BeginPosition time.Time `xml:"beginPosition"`
							EndPosition   struct {
								IndeterminatePosition string `xml:"indeterminatePosition,attr"`
							} `xml:"endPosition"`
						} `xml:"TimePeriod"`
					} `xml:"validTime"`
				} `xml:"NDBTimeSlice"`
			} `xml:"timeSlice"`
		} `xml:"NDB"`
		Navaid *struct {
			Id         string `xml:"id,attr"`
			Identifier struct {
				CodeSpace string `xml:"codeSpace,attr"`
				CharData  string `xml:",chardata"`
			} `xml:"identifier"`
			TimeSlice struct {
				NavaidTimeSlice struct {
					Id           string `xml:"id,attr"`
					Availability struct {
						NavaidOperationalStatus struct {
							Id                string `xml:"id,attr"`
							OperationalStatus string `xml:"operationalStatus"`
							TimeInterval      struct {
								Timesheet struct {
									Id string `xml:"id,attr"`
								} `xml:"Timesheet"`
							} `xml:"timeInterval"`
						} `xml:"NavaidOperationalStatus"`
					} `xml:"availability"`
					CorrectionNumber bool   `xml:"correctionNumber"`
					Designator       string `xml:"designator"`
					Interpretation   string `xml:"interpretation"`
					Location         struct {
						ElevatedPoint struct {
							Id      string `xml:"id,attr"`
							SrsName string `xml:"srsName,attr"`
							Pos     string `xml:"pos"`
						} `xml:"ElevatedPoint"`
					} `xml:"location"`
					Name            *string `xml:"name"`
					NavaidEquipment []struct {
						NavaidComponent struct {
							Id                        string `xml:"id,attr"`
							CollocationGroup          *bool  `xml:"collocationGroup"`
							ProvidesNavigableLocation string `xml:"providesNavigableLocation"`
							TheNavaidEquipment        struct {
								Href string `xml:"href,attr"`
							} `xml:"theNavaidEquipment"`
						} `xml:"NavaidComponent"`
					} `xml:"navaidEquipment"`
					SequenceNumber bool   `xml:"sequenceNumber"`
					Type           string `xml:"type"`
					ValidTime      struct {
						TimePeriod struct {
							Id            string    `xml:"id,attr"`
							BeginPosition time.Time `xml:"beginPosition"`
							EndPosition   struct {
								IndeterminatePosition string `xml:"indeterminatePosition,attr"`
							} `xml:"endPosition"`
						} `xml:"TimePeriod"`
					} `xml:"validTime"`
				} `xml:"NavaidTimeSlice"`
			} `xml:"timeSlice"`
		} `xml:"Navaid"`
		ObstacleArea *struct {
			Id         string `xml:"id,attr"`
			Identifier struct {
				CodeSpace string `xml:"codeSpace,attr"`
				CharData  string `xml:",chardata"`
			} `xml:"identifier"`
			TimeSlice struct {
				ObstacleAreaTimeSlice struct {
					Id               string `xml:"id,attr"`
					CorrectionNumber bool   `xml:"correctionNumber"`
					Interpretation   string `xml:"interpretation"`
					Obstacle         []struct {
						Href string `xml:"href,attr"`
					} `xml:"obstacle"`
					SequenceNumber bool   `xml:"sequenceNumber"`
					Type           string `xml:"type"`
					ValidTime      struct {
						TimePeriod struct {
							Id            string    `xml:"id,attr"`
							BeginPosition time.Time `xml:"beginPosition"`
							EndPosition   struct {
								IndeterminatePosition string `xml:"indeterminatePosition,attr"`
							} `xml:"endPosition"`
						} `xml:"TimePeriod"`
					} `xml:"validTime"`
				} `xml:"ObstacleAreaTimeSlice"`
			} `xml:"timeSlice"`
		} `xml:"ObstacleArea"`
		Runway *struct {
			Id         string `xml:"id,attr"`
			Identifier struct {
				CodeSpace string `xml:"codeSpace,attr"`
				CharData  string `xml:",chardata"`
			} `xml:"identifier"`
			TimeSlice struct {
				RunwayTimeSlice struct {
					Id                        string `xml:"id,attr"`
					AssociatedAirportHeliport struct {
						Href string `xml:"href,attr"`
					} `xml:"associatedAirportHeliport"`
					CorrectionNumber bool   `xml:"correctionNumber"`
					Designator       string `xml:"designator"`
					Interpretation   string `xml:"interpretation"`
					LengthAccuracy   struct {
						Uom      string `xml:"uom,attr"`
						CharData string `xml:",chardata"`
					} `xml:"lengthAccuracy"`
					LengthStrip *struct {
						Uom      string `xml:"uom,attr"`
						CharData string `xml:",chardata"`
					} `xml:"lengthStrip"`
					NominalLength struct {
						Uom      string `xml:"uom,attr"`
						CharData string `xml:",chardata"`
					} `xml:"nominalLength"`
					NominalWidth struct {
						Uom      string `xml:"uom,attr"`
						CharData string `xml:",chardata"`
					} `xml:"nominalWidth"`
					SequenceNumber    bool `xml:"sequenceNumber"`
					SurfaceProperties struct {
						SurfaceCharacteristics struct {
							Id                  string  `xml:"id,attr"`
							ClassPCN            *int    `xml:"classPCN"`
							Composition         string  `xml:"composition"`
							EvaluationMethodPCN *string `xml:"evaluationMethodPCN"`
							MaxTyrePressurePCN  *string `xml:"maxTyrePressurePCN"`
							PavementSubgradePCN *string `xml:"pavementSubgradePCN"`
							PavementTypePCN     *string `xml:"pavementTypePCN"`
						} `xml:"SurfaceCharacteristics"`
					} `xml:"surfaceProperties"`
					Type      string `xml:"type"`
					ValidTime struct {
						TimePeriod struct {
							Id            string    `xml:"id,attr"`
							BeginPosition time.Time `xml:"beginPosition"`
							EndPosition   struct {
								IndeterminatePosition string `xml:"indeterminatePosition,attr"`
							} `xml:"endPosition"`
						} `xml:"TimePeriod"`
					} `xml:"validTime"`
					WidthAccuracy struct {
						Uom      string `xml:"uom,attr"`
						CharData string `xml:",chardata"`
					} `xml:"widthAccuracy"`
					WidthStrip *struct {
						Uom      string `xml:"uom,attr"`
						CharData string `xml:",chardata"`
					} `xml:"widthStrip"`
				} `xml:"RunwayTimeSlice"`
			} `xml:"timeSlice"`
		} `xml:"Runway"`
		RunwayCentrelinePoint *struct {
			Id         string `xml:"id,attr"`
			Identifier struct {
				CodeSpace string `xml:"codeSpace,attr"`
				CharData  string `xml:",chardata"`
			} `xml:"identifier"`
			TimeSlice struct {
				RunwayCentrelinePointTimeSlice struct {
					Id                         string `xml:"id,attr"`
					AssociatedDeclaredDistance []*struct {
						RunwayDeclaredDistance struct {
							Id            string `xml:"id,attr"`
							DeclaredValue struct {
								RunwayDeclaredDistanceValue struct {
									Id       string `xml:"id,attr"`
									Distance struct {
										Uom      string `xml:"uom,attr"`
										CharData string `xml:",chardata"`
									} `xml:"distance"`
									DistanceAccuracy struct {
										Uom      string `xml:"uom,attr"`
										CharData string `xml:",chardata"`
									} `xml:"distanceAccuracy"`
								} `xml:"RunwayDeclaredDistanceValue"`
							} `xml:"declaredValue"`
							Type string `xml:"type"`
						} `xml:"RunwayDeclaredDistance"`
					} `xml:"associatedDeclaredDistance"`
					CorrectionNumber bool   `xml:"correctionNumber"`
					Designator       string `xml:"designator"`
					Interpretation   string `xml:"interpretation"`
					Location         struct {
						ElevatedPoint struct {
							Id        string `xml:"id,attr"`
							SrsName   string `xml:"srsName,attr"`
							Elevation *struct {
								Uom      string `xml:"uom,attr"`
								CharData string `xml:",chardata"`
							} `xml:"elevation"`
							Pos string `xml:"pos"`
						} `xml:"ElevatedPoint"`
					} `xml:"location"`
					OnRunway struct {
						Href string `xml:"href,attr"`
					} `xml:"onRunway"`
					Role           *string `xml:"role"`
					SequenceNumber bool    `xml:"sequenceNumber"`
					ValidTime      struct {
						TimePeriod struct {
							Id            string    `xml:"id,attr"`
							BeginPosition time.Time `xml:"beginPosition"`
							EndPosition   struct {
								IndeterminatePosition string `xml:"indeterminatePosition,attr"`
							} `xml:"endPosition"`
						} `xml:"TimePeriod"`
					} `xml:"validTime"`
				} `xml:"RunwayCentrelinePointTimeSlice"`
			} `xml:"timeSlice"`
		} `xml:"RunwayCentrelinePoint"`
		RunwayDirection *struct {
			Id         string `xml:"id,attr"`
			Identifier struct {
				CodeSpace string `xml:"codeSpace,attr"`
				CharData  string `xml:",chardata"`
			} `xml:"identifier"`
			TimeSlice struct {
				RunwayDirectionTimeSlice struct {
					Id               string `xml:"id,attr"`
					CorrectionNumber bool   `xml:"correctionNumber"`
					Designator       string `xml:"designator"`
					ElevationTDZ     *struct {
						Uom      string `xml:"uom,attr"`
						CharData string `xml:",chardata"`
					} `xml:"elevationTDZ"`
					ElevationTDZAccuracy *struct {
						Nil       bool   `xml:"nil,attr"`
						NilReason string `xml:"nilReason,attr"`
					} `xml:"elevationTDZAccuracy"`
					Interpretation  string   `xml:"interpretation"`
					MagneticBearing *float64 `xml:"magneticBearing"`
					SequenceNumber  bool     `xml:"sequenceNumber"`
					TrueBearing     struct {
						Nil       *bool   `xml:"nil,attr"`
						NilReason *string `xml:"nilReason,attr"`
						CharData  string  `xml:",chardata"`
					} `xml:"trueBearing"`
					TrueBearingAccuracy struct {
						Nil       *bool   `xml:"nil,attr"`
						NilReason *string `xml:"nilReason,attr"`
						CharData  string  `xml:",chardata"`
					} `xml:"trueBearingAccuracy"`
					UsedRunway struct {
						Href string `xml:"href,attr"`
					} `xml:"usedRunway"`
					ValidTime struct {
						TimePeriod struct {
							Id            string    `xml:"id,attr"`
							BeginPosition time.Time `xml:"beginPosition"`
							EndPosition   struct {
								IndeterminatePosition string `xml:"indeterminatePosition,attr"`
							} `xml:"endPosition"`
						} `xml:"TimePeriod"`
					} `xml:"validTime"`
				} `xml:"RunwayDirectionTimeSlice"`
			} `xml:"timeSlice"`
		} `xml:"RunwayDirection"`
		TACAN *struct {
			Id         string `xml:"id,attr"`
			Identifier struct {
				CodeSpace string `xml:"codeSpace,attr"`
				CharData  string `xml:",chardata"`
			} `xml:"identifier"`
			TimeSlice struct {
				TACANTimeSlice struct {
					Id        string `xml:"id,attr"`
					Authority struct {
						AuthorityForNavaidEquipment struct {
							Id                       string `xml:"id,attr"`
							TheOrganisationAuthority struct {
								Href string `xml:"href,attr"`
							} `xml:"theOrganisationAuthority"`
						} `xml:"AuthorityForNavaidEquipment"`
					} `xml:"authority"`
					Channel          string `xml:"channel"`
					CorrectionNumber bool   `xml:"correctionNumber"`
					Designator       string `xml:"designator"`
					Interpretation   string `xml:"interpretation"`
					Location         struct {
						ElevatedPoint struct {
							Id      string `xml:"id,attr"`
							SrsName string `xml:"srsName,attr"`
							Pos     string `xml:"pos"`
						} `xml:"ElevatedPoint"`
					} `xml:"location"`
					Name           *string `xml:"name"`
					SequenceNumber bool    `xml:"sequenceNumber"`
					ValidTime      struct {
						TimePeriod struct {
							Id            string    `xml:"id,attr"`
							BeginPosition time.Time `xml:"beginPosition"`
							EndPosition   struct {
								IndeterminatePosition string `xml:"indeterminatePosition,attr"`
							} `xml:"endPosition"`
						} `xml:"TimePeriod"`
					} `xml:"validTime"`
				} `xml:"TACANTimeSlice"`
			} `xml:"timeSlice"`
		} `xml:"TACAN"`
		VOR *struct {
			Id         string `xml:"id,attr"`
			Identifier struct {
				CodeSpace string `xml:"codeSpace,attr"`
				CharData  string `xml:",chardata"`
			} `xml:"identifier"`
			TimeSlice struct {
				VORTimeSlice struct {
					Id        string `xml:"id,attr"`
					Authority struct {
						AuthorityForNavaidEquipment struct {
							Id                       string `xml:"id,attr"`
							TheOrganisationAuthority struct {
								Href string `xml:"href,attr"`
							} `xml:"theOrganisationAuthority"`
						} `xml:"AuthorityForNavaidEquipment"`
					} `xml:"authority"`
					CorrectionNumber bool   `xml:"correctionNumber"`
					Designator       string `xml:"designator"`
					Frequency        struct {
						Nil       bool    `xml:"nil,attr"`
						NilReason *string `xml:"nilReason,attr"`
						Uom       string  `xml:"uom,attr"`
						CharData  string  `xml:",chardata"`
					} `xml:"frequency"`
					Interpretation string `xml:"interpretation"`
					Location       struct {
						ElevatedPoint struct {
							Id      string `xml:"id,attr"`
							SrsName string `xml:"srsName,attr"`
							Pos     string `xml:"pos"`
						} `xml:"ElevatedPoint"`
					} `xml:"location"`
					Name           *string `xml:"name"`
					SequenceNumber bool    `xml:"sequenceNumber"`
					Type           string  `xml:"type"`
					ValidTime      struct {
						TimePeriod struct {
							Id            string    `xml:"id,attr"`
							BeginPosition time.Time `xml:"beginPosition"`
							EndPosition   struct {
								IndeterminatePosition string `xml:"indeterminatePosition,attr"`
							} `xml:"endPosition"`
						} `xml:"TimePeriod"`
					} `xml:"validTime"`
					ZeroBearingDirection string `xml:"zeroBearingDirection"`
				} `xml:"VORTimeSlice"`
			} `xml:"timeSlice"`
		} `xml:"VOR"`
		VerticalStructure *struct {
			Id         string `xml:"id,attr"`
			Identifier struct {
				CodeSpace string `xml:"codeSpace,attr"`
				CharData  string `xml:",chardata"`
			} `xml:"identifier"`
			TimeSlice struct {
				VerticalStructureTimeSlice struct {
					Id         string `xml:"id,attr"`
					Annotation []*struct {
						Note struct {
							Id             string  `xml:"id,attr"`
							PropertyName   *string `xml:"propertyName"`
							Purpose        string  `xml:"purpose"`
							TranslatedNote struct {
								LinguisticNote struct {
									Id   string `xml:"id,attr"`
									Note string `xml:"note"`
								} `xml:"LinguisticNote"`
							} `xml:"translatedNote"`
						} `xml:"Note"`
					} `xml:"annotation"`
					CorrectionNumber bool   `xml:"correctionNumber"`
					Group            string `xml:"group"`
					Interpretation   string `xml:"interpretation"`
					Lighted          string `xml:"lighted"`
					Name             string `xml:"name"`
					Part             struct {
						VerticalStructurePart struct {
							Id                            string `xml:"id,attr"`
							ConstructionStatus            string `xml:"constructionStatus"`
							HorizontalProjection_location struct {
								ElevatedPoint struct {
									Id        string `xml:"id,attr"`
									SrsName   string `xml:"srsName,attr"`
									Elevation struct {
										Uom      string `xml:"uom,attr"`
										CharData string `xml:",chardata"`
									} `xml:"elevation"`
									Pos string `xml:"pos"`
								} `xml:"ElevatedPoint"`
							} `xml:"horizontalProjection_location"`
							Mobile         string `xml:"mobile"`
							Type           string `xml:"type"`
							VerticalExtent struct {
								Uom      string `xml:"uom,attr"`
								CharData string `xml:",chardata"`
							} `xml:"verticalExtent"`
						} `xml:"VerticalStructurePart"`
					} `xml:"part"`
					SequenceNumber bool   `xml:"sequenceNumber"`
					Type           string `xml:"type"`
					ValidTime      struct {
						TimePeriod struct {
							Id            string    `xml:"id,attr"`
							BeginPosition time.Time `xml:"beginPosition"`
							EndPosition   struct {
								IndeterminatePosition string `xml:"indeterminatePosition,attr"`
							} `xml:"endPosition"`
						} `xml:"TimePeriod"`
					} `xml:"validTime"`
				} `xml:"VerticalStructureTimeSlice"`
			} `xml:"timeSlice"`
		} `xml:"VerticalStructure"`
		VisualGlideSlopeIndicator *struct {
			Id         string `xml:"id,attr"`
			Identifier struct {
				CodeSpace string `xml:"codeSpace,attr"`
				CharData  string `xml:",chardata"`
			} `xml:"identifier"`
			TimeSlice struct {
				VisualGlideSlopeIndicatorTimeSlice struct {
					Id                            string `xml:"id,attr"`
					CorrectionNumber              bool   `xml:"correctionNumber"`
					Interpretation                string `xml:"interpretation"`
					MinimumEyeHeightOverThreshold *struct {
						Uom      string `xml:"uom,attr"`
						CharData string `xml:",chardata"`
					} `xml:"minimumEyeHeightOverThreshold"`
					Position        *string `xml:"position"`
					RunwayDirection struct {
						Href string `xml:"href,attr"`
					} `xml:"runwayDirection"`
					SequenceNumber bool    `xml:"sequenceNumber"`
					SlopeAngle     float64 `xml:"slopeAngle"`
					Type           string  `xml:"type"`
					ValidTime      struct {
						TimePeriod struct {
							Id            string    `xml:"id,attr"`
							BeginPosition time.Time `xml:"beginPosition"`
							EndPosition   struct {
								IndeterminatePosition string `xml:"indeterminatePosition,attr"`
							} `xml:"endPosition"`
						} `xml:"TimePeriod"`
					} `xml:"validTime"`
				} `xml:"VisualGlideSlopeIndicatorTimeSlice"`
			} `xml:"timeSlice"`
		} `xml:"VisualGlideSlopeIndicator"`
	} `xml:"hasMember"`
}
